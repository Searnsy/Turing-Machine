//Four Tape Program:
//1) Algebraic statements with full parentheses: E.g. ((3+5)^2)
//2) Input tape #1 for left side of operation (E.g. 3)
//3) Input tape #2 for right side of operation (E.g. 5)
//4) Output tape for resultant of given operation (E.g. 8)


//State 0: Find first ')'
(0,{),*,*,*},{*,*,*,*},{L,S,S,S},1)
(0,{ ,*,*,*},{ ,*,*,*},{S,S,S,S},-1)
(0,{*,*,*,*},{*,*,*,*},{R,S,S,S},0)


//State 1: Find first '('
(1,{(,*,*,*},{*,*,*,*},{R,S,S,S},2)
(1,{*,*,*,*},{*,*,*,*},{L,S,S,S},1)


//State 2: Copy left number
(2,{0,*,*,*},{*,0,*,*},{R,R,S,S},2)
(2,{1,*,*,*},{*,1,*,*},{R,R,S,S},2)
(2,{2,*,*,*},{*,2,*,*},{R,R,S,S},2)
(2,{3,*,*,*},{*,3,*,*},{R,R,S,S},2)
(2,{4,*,*,*},{*,4,*,*},{R,R,S,S},2)
(2,{5,*,*,*},{*,5,*,*},{R,R,S,S},2)
(2,{6,*,*,*},{*,6,*,*},{R,R,S,S},2)
(2,{7,*,*,*},{*,7,*,*},{R,R,S,S},2)
(2,{8,*,*,*},{*,8,*,*},{R,R,S,S},2)
(2,{9,*,*,*},{*,9,*,*},{R,R,S,S},2)

(2,{+,*,*,*},{*,*,*,*},{R,L,S,S},3)
(2,{-,*,*,*},{*,*,*,*},{R,L,S,S},3)
(2,{x,*,*,*},{*,*,*,*},{R,L,S,S},3)
(2,{/,*,*,*},{*,*,*,*},{R,L,S,S},3)
(2,{%,*,*,*},{*,*,*,*},{R,L,S,S},3)
(2,{^,*,*,*},{*,*,*,*},{R,L,S,S},3)


//State 3: Copy right number
(3,{0,*,*,*},{*,*,0,*},{R,S,R,S},3)
(3,{1,*,*,*},{*,*,1,*},{R,S,R,S},3)
(3,{2,*,*,*},{*,*,2,*},{R,S,R,S},3)
(3,{3,*,*,*},{*,*,3,*},{R,S,R,S},3)
(3,{4,*,*,*},{*,*,4,*},{R,S,R,S},3)
(3,{5,*,*,*},{*,*,5,*},{R,S,R,S},3)
(3,{6,*,*,*},{*,*,6,*},{R,S,R,S},3)
(3,{7,*,*,*},{*,*,7,*},{R,S,R,S},3)
(3,{8,*,*,*},{*,*,8,*},{R,S,R,S},3)
(3,{9,*,*,*},{*,*,9,*},{R,S,R,S},3)

(3,{),*,*,*},{*,*,*,*},{L,S,L,S},4)


//State 4: Find operation
(4,{+,*,*,*},{*,*,*,*},{S,S,S,S},101)
(4,{-,*,*,*},{*,*,*,*},{S,S,S,S},111)
(4,{x,*,*,*},{*,*,*,*},{S,S,S,S},121)
(4,{/,*,*,*},{*,*,*,*},{S,S,S,S},121)
(4,{%,*,*,*},{*,*,*,*},{S,S,S,S},121)
(4,{^,*,*,*},{*,*,*,*},{S,S,S,S},151)
(4,{*,*,*,*},{*,*,*,*},{L,S,S,S},4)


//States 100+: Evaluate operation (Note states will be designated from other integer sets as follows:
//(+, 101-110),(-, 111-120),(*, 121-130),(/, 131-140),(%, 141-150),(^, 151-160)
//Implementation details:
//Operations are implemented in decimal, any in-place operations will be copied to output tape and deleted from input tapes
//@param start: Right end of input tapes, blank output tape
//@param end: Blank input tapes, Left end of output tape

//+
//Concatenates Decimal to Unary in Tape 4, Copy to Tape 2, Convert back to Decimal on Tape 4, Cleanup
(101,{*,0,*,*},{*,0,*,*},{S,L,S,S},101)
(101,{*,1,*,*},{*,0,*,1},{S,R,S,L},102)
(101,{*,2,*,*},{*,1,*,1},{S,R,S,L},102)
(101,{*,3,*,*},{*,2,*,1},{S,R,S,L},102)
(101,{*,4,*,*},{*,3,*,1},{S,R,S,L},102)
(101,{*,5,*,*},{*,4,*,1},{S,R,S,L},102)
(101,{*,6,*,*},{*,5,*,1},{S,R,S,L},102)
(101,{*,7,*,*},{*,6,*,1},{S,R,S,L},102)
(101,{*,8,*,*},{*,7,*,1},{S,R,S,L},102)
(101,{*,9,*,*},{*,8,*,1},{S,R,S,L},102)
(101,{*, ,*,*},{*,*,*,*},{S,R,S,S},103)
(102,{*,0,*,*},{*,9,*,*},{S,R,S,S},102)
(102,{*, ,*,*},{*,*,*,*},{S,L,S,S},101)

(103,{*,*,0,*},{*,*,0,*},{S,S,L,S},103)
(103,{*,*,1,*},{*,*,0,1},{S,S,R,L},104)
(103,{*,*,2,*},{*,*,1,1},{S,S,R,L},104)
(103,{*,*,3,*},{*,*,2,1},{S,S,R,L},104)
(103,{*,*,4,*},{*,*,3,1},{S,S,R,L},104)
(103,{*,*,5,*},{*,*,4,1},{S,S,R,L},104)
(103,{*,*,6,*},{*,*,5,1},{S,S,R,L},104)
(103,{*,*,7,*},{*,*,6,1},{S,S,R,L},104)
(103,{*,*,8,*},{*,*,7,1},{S,S,R,L},104)
(103,{*,*,9,*},{*,*,8,1},{S,S,R,L},104)
(103,{*,*, ,*},{*,*,*,*},{S,S,R,R},105)
(104,{*,*,0,*},{*,*,9,*},{S,S,R,S},104)
(104,{*,*, ,*},{*,*,*,*},{S,S,L,S},103)

(105,{*, , ,*},{*,*,*,*},{S,S,S,S},106)
(105,{*, ,*,*},{*,*, ,*},{S,S,R,S},105)
(105,{*,*, ,*},{*, ,*,*},{S,R,S,S},105)
(105,{*,*,*,*},{*, , ,*},{S,R,R,S},105)

(106,{*,*,*,1},{*,1,*, },{S,R,S,R},106)
(106,{*,*,*, },{*,*,*,*},{S,L,S,L},107)

(107,{*,1,*, },{*, ,*,1},{S,L,S,R},108)
(107,{*,1,*,0},{*, ,*,1},{S,L,S,R},108)
(107,{*,1,*,1},{*, ,*,2},{S,L,S,R},108)
(107,{*,1,*,2},{*, ,*,3},{S,L,S,R},108)
(107,{*,1,*,3},{*, ,*,4},{S,L,S,R},108)
(107,{*,1,*,4},{*, ,*,5},{S,L,S,R},108)
(107,{*,1,*,5},{*, ,*,6},{S,L,S,R},108)
(107,{*,1,*,6},{*, ,*,7},{S,L,S,R},108)
(107,{*,1,*,7},{*, ,*,8},{S,L,S,R},108)
(107,{*,1,*,8},{*, ,*,9},{S,L,S,R},108)
(107,{*,1,*,9},{*,1,*,0},{S,S,S,L},107)
(107,{*, ,*,*},{*,*,*,*},{S,S,S,L},109)
(108,{*,*,*, },{*,*,*, },{S,S,S,L},107)
(108,{*,*,*,*},{*,*,*,*},{S,S,S,R},108)

(109,{*,*, , },{*,*,*,*},{S,S,R,R},5)
(109,{*,*,*, },{*,*, , },{S,S,L,S},109)
(109,{*,*,*,*},{*,*, ,*},{S,S,L,L},109)

//-
//Same as + except second convert removes rather than concatenates
(111,{*,0,*,*},{*,0,*,*},{S,L,S,S},111)
(111,{*,1,*,*},{*,0,*,1},{S,R,S,L},112)
(111,{*,2,*,*},{*,1,*,1},{S,R,S,L},112)
(111,{*,3,*,*},{*,2,*,1},{S,R,S,L},112)
(111,{*,4,*,*},{*,3,*,1},{S,R,S,L},112)
(111,{*,5,*,*},{*,4,*,1},{S,R,S,L},112)
(111,{*,6,*,*},{*,5,*,1},{S,R,S,L},112)
(111,{*,7,*,*},{*,6,*,1},{S,R,S,L},112)
(111,{*,8,*,*},{*,7,*,1},{S,R,S,L},112)
(111,{*,9,*,*},{*,8,*,1},{S,R,S,L},112)
(111,{*, ,*,*},{*,*,*,*},{S,R,S,R},113)
(112,{*,0,*,*},{*,9,*,*},{S,R,S,S},112)
(112,{*, ,*,*},{*,*,*,*},{S,L,S,S},111)

(113,{*,*,0,*},{*,*,0,*},{S,S,L,S},113)
(113,{*,*,1,*},{*,*,0, },{S,S,R,R},114)
(113,{*,*,2,*},{*,*,1, },{S,S,R,R},114)
(113,{*,*,3,*},{*,*,2, },{S,S,R,R},114)
(113,{*,*,4,*},{*,*,3, },{S,S,R,R},114)
(113,{*,*,5,*},{*,*,4, },{S,S,R,R},114)
(113,{*,*,6,*},{*,*,5, },{S,S,R,R},114)
(113,{*,*,7,*},{*,*,6, },{S,S,R,R},114)
(113,{*,*,8,*},{*,*,7, },{S,S,R,R},114)
(113,{*,*,9,*},{*,*,8, },{S,S,R,R},114)
(113,{*,*, ,*},{*,*,*,*},{S,S,R,S},115)
(114,{*,*,0,*},{*,*,9,*},{S,S,R,S},114)
(114,{*,*, ,*},{*,*,*,*},{S,S,L,S},113)

(115,{*, , ,*},{*,*,*,*},{S,S,S,S},116)
(115,{*, ,*,*},{*,*, ,*},{S,S,R,S},115)
(115,{*,*, ,*},{*, ,*,*},{S,R,S,S},115)
(115,{*,*,*,*},{*, , ,*},{S,R,R,S},115)

(116,{*,*,*,1},{*,1,*, },{S,R,S,R},116)
(116,{*,*,*, },{*,*,*,*},{S,L,S,L},117)

(117,{*,1,*, },{*, ,*,1},{S,L,S,R},118)
(117,{*,1,*,0},{*, ,*,1},{S,L,S,R},118)
(117,{*,1,*,1},{*, ,*,2},{S,L,S,R},118)
(117,{*,1,*,2},{*, ,*,3},{S,L,S,R},118)
(117,{*,1,*,3},{*, ,*,4},{S,L,S,R},118)
(117,{*,1,*,4},{*, ,*,5},{S,L,S,R},118)
(117,{*,1,*,5},{*, ,*,6},{S,L,S,R},118)
(117,{*,1,*,6},{*, ,*,7},{S,L,S,R},118)
(117,{*,1,*,7},{*, ,*,8},{S,L,S,R},118)
(117,{*,1,*,8},{*, ,*,9},{S,L,S,R},118)
(117,{*,1,*,9},{*,1,*,0},{S,S,S,L},117)
(117,{*, ,*,*},{*,*,*,*},{S,S,S,L},119)
(118,{*,*,*, },{*,*,*, },{S,S,S,L},117)
(118,{*,*,*,*},{*,*,*,*},{S,S,S,R},118)

(119,{*,*, , },{*,*,*,*},{S,S,R,R},5)
(119,{*,*,*, },{*,*, , },{S,S,L,S},119)
(119,{*,*,*,*},{*,*, ,*},{S,S,L,L},119)

//x,/,%
//Converts Decimal to Unary 2 -> 4, 3 -> 2, Repeat concat in Unary 2,4 -> 3, Converts back to Decimal 3 -> 4, Cleanup
(121,{*,0,*,*},{*,0,*,*},{S,L,S,S},121)
(121,{*,1,*,*},{*,0,*,1},{S,R,S,L},122)
(121,{*,2,*,*},{*,1,*,1},{S,R,S,L},122)
(121,{*,3,*,*},{*,2,*,1},{S,R,S,L},122)
(121,{*,4,*,*},{*,3,*,1},{S,R,S,L},122)
(121,{*,5,*,*},{*,4,*,1},{S,R,S,L},122)
(121,{*,6,*,*},{*,5,*,1},{S,R,S,L},122)
(121,{*,7,*,*},{*,6,*,1},{S,R,S,L},122)
(121,{*,8,*,*},{*,7,*,1},{S,R,S,L},122)
(121,{*,9,*,*},{*,8,*,1},{S,R,S,L},122)
(121,{*, ,*,*},{*,*,*,*},{S,R,S,R},123)
(122,{*,0,*,*},{*,9,*,*},{S,R,S,S},122)
(122,{*, ,*,*},{*,*,*,*},{S,L,S,S},121)

(123,{*,*,0,*},{*,*,0,*},{S,S,L,S},123)
(123,{*,*,1,*},{*,1,0,*},{S,R,R,S},124)
(123,{*,*,2,*},{*,1,1,*},{S,R,R,S},124)
(123,{*,*,3,*},{*,1,2,*},{S,R,R,S},124)
(123,{*,*,4,*},{*,1,3,*},{S,R,R,S},124)
(123,{*,*,5,*},{*,1,4,*},{S,R,R,S},124)
(123,{*,*,6,*},{*,1,5,*},{S,R,R,S},124)
(123,{*,*,7,*},{*,1,6,*},{S,R,R,S},124)
(123,{*,*,8,*},{*,1,7,*},{S,R,R,S},124)
(123,{*,*,9,*},{*,1,8,*},{S,R,R,S},124)
(123,{*,*, ,*},{*,*,*,*},{S,S,R,S},125)
(124,{*,*,0,*},{*,*,9,*},{S,S,R,S},124)
(124,{*,*, ,*},{*,*,*,*},{S,S,L,S},123)

(125,{*, , ,*},{*,*,*,*},{S,S,S,S},126)
(125,{*, ,*,*},{*,*, ,*},{S,S,R,S},125)
(125,{*,*, ,*},{*, ,*,*},{S,R,S,S},125)
(125,{*,*,*,*},{*, , ,*},{S,R,R,S},125)
(126,{*, ,*,*},{*,*,*,*},{S,L,S,S},126)

//Reroutes x,/,% to corresponding places
(126,{x,*,*,*},{*,*,*,*},{S,S,S,S},131)
(126,{/,*,*,*},{*,*,*,*},{S,S,S,S},141)
(126,{%,*,*,*},{*,*,*,*},{S,S,S,S},151)

//Precondition: Unary answer on right end of tape 3, other tapes clean
(127,{*,*,1, },{*,*, ,1},{S,S,L,R},128)
(127,{*,*,1,0},{*,*, ,1},{S,S,L,R},128)
(127,{*,*,1,1},{*,*, ,2},{S,S,L,R},128)
(127,{*,*,1,2},{*,*, ,3},{S,S,L,R},128)
(127,{*,*,1,3},{*,*, ,4},{S,S,L,R},128)
(127,{*,*,1,4},{*,*, ,5},{S,S,L,R},128)
(127,{*,*,1,5},{*,*, ,6},{S,S,L,R},128)
(127,{*,*,1,6},{*,*, ,7},{S,S,L,R},128)
(127,{*,*,1,7},{*,*, ,8},{S,S,L,R},128)
(127,{*,*,1,8},{*,*, ,9},{S,S,L,R},128)
(127,{*,*,1,9},{*,*,1,0},{S,S,S,L},127)
(127,{*,*, ,*},{*,*,*,*},{S,S,S,L},129)
(128,{*,*,*, },{*,*,*, },{S,S,S,L},127)
(128,{*,*,*,*},{*,*,*,*},{S,S,S,R},128)
(129,{*,*,*, },{*,*,*,*},{S,S,S,R},5)
(129,{*,*,*,*},{*,*,*,*},{S,S,S,L},129)

//x
(131,{*,*,*, },{*, ,*,*},{S,L,S,L},132)
(131,{*, ,*,*},{*,*,*,*},{S,S,L,S},133)
(131,{*,*,*,*},{*,*,1,*},{S,S,R,R},131)
(132,{*,*,*, },{*,*,*,*},{S,S,S,R},131)
(132,{*,*,*,*},{*,*,*,*},{S,S,S,L},132)
(133,{*,*,*, },{*,*,*,*},{S,S,S,S},127)
(133,{*,*,*,*},{*,*,*, },{S,S,S,R},133)

//Divide
(141,{*, ,*,*},{*,*,1,*},{S,R,R,L},142)
(141,{*,*,*, },{*,*,*,*},{S,R,L,L},145)
(141,{*,1,*,1},{*,*,*,*},{S,L,S,R},141)
(142,{*, ,*,*},{*,*,*,*},{S,L,S,R},143)
(142,{*,*,*,*},{*,*,*,*},{S,R,S,L},142)
(143,{*, ,*,*},{*,*,*,*},{S,R,S,S},144)
(143,{*,*,*,*},{*,*,*, },{S,L,S,R},143)
(144,{*, ,*,*},{*,*,*,*},{S,L,S,S},141)
(144,{*,*,*,*},{*,*,*,*},{S,R,S,S},144)
(145,{*, ,*,*},{*,*,*,*},{S,L,S,S},146)
(145,{*,*,*,*},{*,*,*,*},{S,R,S,S},145)
(146,{*, ,*, },{*,*,*,*},{S,R,S,L},127)
(146,{*, ,*,*},{*,*,*, },{S,S,S,L},146)
(146,{*,*,*, },{*, ,*,*},{S,L,S,S},146)
(146,{*,*,*,*},{*, ,*, },{S,L,S,L},146)

//%
(151,{*, ,*,*},{*,*,*,*},{S,R,S,L},152)
(151,{*,*,*, },{*,*,*,*},{S,R,S,L},155)
(151,{*,1,*,1},{*,*,*,*},{S,L,S,R},151)
(152,{*, ,*,*},{*,*,*,*},{S,L,S,R},153)
(152,{*,*,*,*},{*,*,*,*},{S,R,S,L},152)
(153,{*, ,*,*},{*,*,*,*},{S,R,S,S},154)
(153,{*,*,*,*},{*,*,*, },{S,L,S,R},153)
(154,{*, ,*,*},{*,*,*,*},{S,L,S,S},151)
(154,{*,*,*,*},{*,*,*,*},{S,R,S,S},154)

(155,{*, ,*,*},{*,*,*,*},{S,L,S,S},156)
(155,{*,*,*,*},{*,*,*,*},{S,R,S,S},155)

(156,{*, ,*, },{*,*,*,*},{S,R,L,L},127)
(156,{*, ,*,*},{*,*,1, },{S,S,R,L},156)
(156,{*,*,*, },{*, ,*,*},{S,L,S,S},156)
(156,{*,*,*,*},{*, ,1, },{S,L,R,L},156)

//^


//State 5: Find '('
(5,{(,*,*,*},{*,*,*,*},{S,S,S,S},6)
(5,{*,*,*,*},{*,*,*,*},{L,S,S,S},5)


//State 6: Copy output
(6,{),*,*,0},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,1},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,2},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,3},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,4},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,5},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,6},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,7},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,8},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,9},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,+},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,-},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,x},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,/},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,%},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,^},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,(},{ ,*,*,*},{R,S,S,S},7)
(6,{),*,*,)},{ ,*,*,*},{R,S,S,S},7)

(6,{),*,*, },{ ,*,*,*},{R,S,S,S},7)
(6,{*,*,*, },{ ,*,*,*},{S,S,S,S},10)

(6,{*,*,*,0},{0,*,*, },{R,S,S,R},6)
(6,{*,*,*,1},{1,*,*, },{R,S,S,R},6)
(6,{*,*,*,2},{2,*,*, },{R,S,S,R},6)
(6,{*,*,*,3},{3,*,*, },{R,S,S,R},6)
(6,{*,*,*,4},{4,*,*, },{R,S,S,R},6)
(6,{*,*,*,5},{5,*,*, },{R,S,S,R},6)
(6,{*,*,*,6},{6,*,*, },{R,S,S,R},6)
(6,{*,*,*,7},{7,*,*, },{R,S,S,R},6)
(6,{*,*,*,8},{8,*,*, },{R,S,S,R},6)
(6,{*,*,*,9},{9,*,*, },{R,S,S,R},6)
(6,{*,*,*,+},{+,*,*, },{R,S,S,R},6)
(6,{*,*,*,-},{-,*,*, },{R,S,S,R},6)
(6,{*,*,*,x},{x,*,*, },{R,S,S,R},6)
(6,{*,*,*,/},{/,*,*, },{R,S,S,R},6)
(6,{*,*,*,%},{%,*,*, },{R,S,S,R},6)
(6,{*,*,*,^},{^,*,*, },{R,S,S,R},6)
(6,{*,*,*,(},{(,*,*, },{R,S,S,R},6)
(6,{*,*,*,)},{),*,*, },{R,S,S,R},6)


//State 7: Error handling - not enough space for output
//Implementation details:
//Starts from the blank space at ')'
//Creates a reference copy of the rest of the string
(7,{0,*,*,*},{ ,0,*,*},{R,R,S,S},7)
(7,{1,*,*,*},{ ,1,*,*},{R,R,S,S},7)
(7,{2,*,*,*},{ ,2,*,*},{R,R,S,S},7)
(7,{3,*,*,*},{ ,3,*,*},{R,R,S,S},7)
(7,{4,*,*,*},{ ,4,*,*},{R,R,S,S},7)
(7,{5,*,*,*},{ ,5,*,*},{R,R,S,S},7)
(7,{6,*,*,*},{ ,6,*,*},{R,R,S,S},7)
(7,{7,*,*,*},{ ,7,*,*},{R,R,S,S},7)
(7,{8,*,*,*},{ ,8,*,*},{R,R,S,S},7)
(7,{9,*,*,*},{ ,9,*,*},{R,R,S,S},7)
(7,{+,*,*,*},{ ,+,*,*},{R,R,S,S},7)
(7,{-,*,*,*},{ ,-,*,*},{R,R,S,S},7)
(7,{x,*,*,*},{ ,x,*,*},{R,R,S,S},7)
(7,{/,*,*,*},{ ,/,*,*},{R,R,S,S},7)
(7,{%,*,*,*},{ ,%,*,*},{R,R,S,S},7)
(7,{^,*,*,*},{ ,^,*,*},{R,R,S,S},7)
(7,{(,*,*,*},{ ,(,*,*},{R,R,S,S},7)
(7,{),*,*,*},{ ,),*,*},{R,R,S,S},7)

(7,{ ,*,*,*},{ ,*,*,*},{L,L,S,S},8)


//State 8: Move left until finding the right end of the expression tape
(8,{ ,*,*,*},{ ,*,*,*},{L,S,S,S},8)
(8,{*,*,*,*},{*,*,*,*},{R,S,S,S},12)


//State 12: Move left until finding left end of copied tape
(12,{*, ,*,*},{*, ,*,*},{S,R,S,S},9)
(12,{*,*,*,*},{*,*,*,*},{S,L,S,S},12)


/State 9: Move right and copy in remainder of output tape -> input tape
(9,{*,*,*,0},{0,*,*, },{R,S,S,R},9)
(9,{*,*,*,1},{1,*,*, },{R,S,S,R},9)
(9,{*,*,*,2},{2,*,*, },{R,S,S,R},9)
(9,{*,*,*,3},{3,*,*, },{R,S,S,R},9)
(9,{*,*,*,4},{4,*,*, },{R,S,S,R},9)
(9,{*,*,*,5},{5,*,*, },{R,S,S,R},9)
(9,{*,*,*,6},{6,*,*, },{R,S,S,R},9)
(9,{*,*,*,7},{7,*,*, },{R,S,S,R},9)
(9,{*,*,*,8},{8,*,*, },{R,S,S,R},9)
(9,{*,*,*,9},{9,*,*, },{R,S,S,R},9)

(9,{*,0,*,*},{0, ,*,*},{R,R,S,S},9)
(9,{*,1,*,*},{1, ,*,*},{R,R,S,S},9)
(9,{*,2,*,*},{2, ,*,*},{R,R,S,S},9)
(9,{*,3,*,*},{3, ,*,*},{R,R,S,S},9)
(9,{*,4,*,*},{4, ,*,*},{R,R,S,S},9)
(9,{*,5,*,*},{5, ,*,*},{R,R,S,S},9)
(9,{*,6,*,*},{6, ,*,*},{R,R,S,S},9)
(9,{*,7,*,*},{7, ,*,*},{R,R,S,S},9)
(9,{*,8,*,*},{8, ,*,*},{R,R,S,S},9)
(9,{*,9,*,*},{9, ,*,*},{R,R,S,S},9)
(9,{*,+,*,*},{+, ,*,*},{R,R,S,S},9)
(9,{*,-,*,*},{-, ,*,*},{R,R,S,S},9)
(9,{*,x,*,*},{x, ,*,*},{R,R,S,S},9)
(9,{*,/,*,*},{/, ,*,*},{R,R,S,S},9)
(9,{*,%,*,*},{%, ,*,*},{R,R,S,S},9)
(9,{*,^,*,*},{^, ,*,*},{R,R,S,S},9)
(9,{*,(,*,*},{(, ,*,*},{R,R,S,S},9)
(9,{*,),*,*},{), ,*,*},{R,R,S,S},9)

(9,{*, ,*,*},{*, ,*,*},{L,S,S,S},11)


//State 10: Error handling - too much space for output
(10,{),*,*,*},{ ,*,*,*},{R,S,S,S},7)
(10,{*,*,*,*},{ ,*,*,*},{R,S,S,S},10)


//State 11: Move Left to the start of the expression
(11,{ ,*,*,*},{*,*,*,*},{R,S,S,S},0)
(11,{*,*,*,*},{*,*,*,*},{L,S,S,S},11)